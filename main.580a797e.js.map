{"version":3,"sources":["scripts/main.js"],"names":["list","document","querySelectorAll","salaryToNumber","string","match","join","sortList","elements","ul","querySelector","sortedEmployees","sort","a","b","getAttribute","forEach","x","appendChild","getEmployees","map","element","name","innerText","position","salary","age","curry","firstCallback","secondCallback","sortAndGetEmployees"],"mappings":";AAAA,aAqEA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAnEA,IAAMA,EAAOC,SAASC,iBAAiB,MAEjCC,EAAiB,SAACC,GAAWA,OAAAA,EAAOC,MAAM,QAAQC,KAAK,KAE7D,SAASC,EAASC,GAaVC,IAAAA,EAAKR,SAASS,cAAc,MAE5BC,EAAkB,EAAIH,GAAUI,KACpC,SAACC,EAAGC,GACFX,OAAAA,EAAeW,EAAEC,aAAa,gBAC5BZ,EAAeU,EAAEE,aAAa,kBAK7BJ,OAFPA,EAAgBK,QAAQ,SAACC,GAAMR,OAAAA,EAAGS,YAAYD,KAEvCN,EAGTJ,EAASP,GAET,IAAMmB,EAAe,SAACX,GACtB,OAUMA,EAAAA,GAAUY,IAAI,SAAAC,GAAY,MAAA,CAC5BC,KAAMD,EAAQE,UACdC,SAAUH,EAAQN,aAAa,iBAC/BU,OAAQJ,EAAQN,aAAa,eAC7BW,IAAKL,EAAQN,aAAa,gBAY9B,SAASY,EAAMC,EAAeC,GACrB,OAAA,WACEA,OAAAA,EAAeD,EAAA,WAAD,EAAA,aAIzB,IAAME,EAAsBH,EAAMpB,EAAUY,GAE5CW,EAAoB9B","file":"main.580a797e.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst list = document.querySelectorAll('li');\n\nconst salaryToNumber = (string) => string.match(/\\d+/g).join('');\n\nfunction sortList(elements) {\n  // const elementArray = Array.from(elements);\n\n  // elementArray.sort((a, b) => {\n  //   const x = salaryToNumber(b.getAttribute('data-salary'));\n  //   const y = salaryToNumber(a.getAttribute('data-salary'));\n\n  //   return x - y;\n  // });\n\n  // const ul = document.querySelector('ul');\n\n  // elementArray.forEach(x => ul.appendChild(x));\n  const ul = document.querySelector('ul');\n\n  const sortedEmployees = [...elements].sort(\n    (a, b) =>\n      salaryToNumber(b.getAttribute('data-salary'))\n      - salaryToNumber(a.getAttribute('data-salary'))\n  );\n\n  sortedEmployees.forEach((x) => ul.appendChild(x));\n\n  return sortedEmployees;\n}\n\nsortList(list);\n\nconst getEmployees = (elements) =>\n// function getEmployees(elements) {\n// const employeesList = [];\n\n  // for (let i = 0; i < elements.length; i++) {\n  //   employeesList.push({\n  //     name: elements[i].innerText,\n  //     position: elements[i].getAttribute('data-position'),\n  //     salary: elements[i].getAttribute('data-salary'),\n  //     age: elements[i].getAttribute('data-age'),\n  //   });\n  [...elements].map(element => ({\n    name: element.innerText,\n    position: element.getAttribute('data-position'),\n    salary: element.getAttribute('data-salary'),\n    age: element.getAttribute('data-age'),\n  }));\n\n// return employeesList;\n// }\n\n// function salaryToNumber(string) {\n//   return string.slice(1).replaceAll(',', '');\n// }\n\n// getEmployees(list);\n\nfunction curry(firstCallback, secondCallback) {\n  return function(...args) {\n    return secondCallback(firstCallback(...args));\n  };\n}\n\nconst sortAndGetEmployees = curry(sortList, getEmployees);\n\nsortAndGetEmployees(list);\n"]}